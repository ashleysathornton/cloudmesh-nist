
openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 05-23-2019
  x-status: defined
  title: User
  description: |-
  
    Services need to specify which users have access to them. User
    information can be reused in other services. Users are useful to
    create a virtual organization that depends on user data.  Users can
    be added, removed, and listed. A group associated with the user can be used
    to augment users to be part of one or more groups.  A number of
    roles can identify a specific role of a user.
    
    Terminology

    * *Group*: A user can be part of a Group
    * *Role*: A user can have a role within that Group


  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: Cloudmesh User
    url: https://cloudmesh-community.github.io/nist/spec/
  license:
    name: Apache
servers:
  - url: /cloudmesh/v3
paths:
  /user:
    get:
      tags:
        - User
      summary: Returns all users
      description: Returns all users      
      operationId: cloudmesh.user.get
      produces:
        - application/json
      responses:
        200:
          description: user information
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
    put:
      tags:
        - User
      summary: Create a new user
      description: Create a new user
      operationId: cloudmesh.user.put
      parameters:
        - in: body
          name: user
          description: The new user to create
          schema:
            $ref: "#/components/schemas/User"
      responses:
        201:
          description: Created
  /user/{name}:
    get:
      tags:
        - User
      summary: Returns the user of a user while looking it up with the username
      description: Returns the user of a user while looking it up with the username
      operationId: cloudmesh.user.get_by_name
      parameters:
        - name: name
          description: name of the user
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: user information
          schema:
            $ref: "#/components/schemas/User"
components:
  schemas:
    User:
      type: object
      properties:
        uuid:
          type: string
          description: A unique id for the user
        username:
          type: string
          description: The unique username associated with the user
        group:
          type: array
          description: A list of groups that are associated to the user
          items:
            $ref: "group.yaml#/components/schemas/Group"
        accounting:
          type: array
          description: A list of accounts that are associated to the user
          items:
            $ref: "accounting.yaml#/components/schemas/Account"
        role:
          type: array
          description: A list of groups that are associated to the user
          items:
            type: string
        resource:
          type: array
          description: A list of resources the user has access to
          items:
            type: string
        description:
          type: string
          description: A description for this user
        firstname:
          type: string
          description: The firstanme of the user
        lastname:
          type: string
          description: The lastname of the user
        publickey:
          type: string
          description: The lastname of the user
        email:
          type: string
          description: The email of the user
        timestamp:
          description: timestamps associated with the resource
          $ref: "timestamp.yaml#/components/schemas/Timestamp"
