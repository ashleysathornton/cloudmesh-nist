openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 14-06-2019
  x-status: TODO
  title: Replica
  description: |-
  
    In many distributed systems, it is important that a file can be
    replicated among different systems to provide faster access. It is
    important to provide a mechanism to trace the pedigree of the file
    while pointing to its original source. A replica will point to a file in
    a file store and store the contents in the file store instead of the
    replica. The replica is just a pointer.

  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup
    url: https://cloudmesh-community.github.io/nist/spec/
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /replica:
    get:
      tags:
        - Replica
      summary: Returns a list of replicas
      description: Returns a list of all replicas
      operationId: cloudmesh.replica.list
      responses:
        '200':
          description: The list of replicas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Replica'
        '400':
          description: No replicas found
        '401':
          description: Not authorized
    put:
      tags:
        - Replica
      summary: Uploads a replica to the list of replicas
      description: Uploads a replica to the list of replicas
      operationId: cloudmesh.replica.add
      requestBody:
        description: The replica to be uploaded
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Replica'
      responses:
        '200':
          description: Replica updated
        '400':
          description: Error updating replica.
        '401':
          description: Not authorized
  /replica/{name}:
    get:
      tags:
        - Replica
      summary: Returns the named replica
      description: Returns an replica by name
      operationId: cloudmesh.replica.find_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the replica
      responses:
        '200':
          description: Returning the information of the replica
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replica'
        '400':
          description: No replica found
        '401':
          description: Not authorized
        '404':
          description: The named replica could not be found
    delete:
      tags:
        - Replica
      summary: Deletes the named replica
      description: Deletes an replica by name
      operationId: cloudmesh.replica.delete_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the replica
      responses:
        '200':
          description: Deletion successful
        '400':
          description: No replica found
        '401':
          description: Not authorized
        '404':
          description: The named replica could not be found
components:
  schemas:
    Replica:
      type: object
      description: An entry representing a file replica record
      properties:
        name:
          type: string
          description: The name of the replica
        filename:
          type: string
          description: The original filename
        endpoint:
          type: string
          description: The location of the file
        checksum:
          type: string
          description: The checksum of the file
        size:
          type: integer
          description: The size of the file in byte
