
openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 08-06-2019
  x-status: defined
  title: Network of Nodes
  description: |-

    A Network of Nodes (NON) contains a number of compute nodes that are
    connected
    by a network and can be reached from each other. The concept is a
    generalization of the term Network of Workstations. In contrast to a
    Virtual Cluster it doe snot have a dedicated manager node. Network of
    nodes can be real or virtual. The same security context can be used to
    authenticate to all nodes in the network of nodes. This is typically done
    with a public keystore in which all keys are stored that allow access to
    the nodes.

  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup Service
    url: https://cloudmesh-community.github.io/nist/spec/
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /non:
    get:
      tags:
        - Non
      summary: Returns a list of nons
      description: Returns a list of all nons
      operationId: cloudmesh.non.list
      responses:
        '200':
          description: The list of nons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Non'
        '400':
          description: No Nons found
        '401':
          description: Not authorized
    put:
      tags:
        - Non
      summary: Uploads an non to the list of nons
      description: Uploads an non to the list of nons
      operationId: cloudmesh.non.add
      requestBody:
        description: The non to be uploaded
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Non'
      responses:
        '200':
          description: Non updated or created.
        '400':
          description: Error updating Non.
        '401':
          description: Not authorized
  /non/{name}/publickeystore:
    get:
      tags:
        - Non
      summary: Returns the information of the keystore
      description: Returns an non by name
      operationId: cloudmesh.non.keystore.find_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the non
      responses:
        '200':
          description: Returning the information of the non
          content:
            application/json:
              schema:
                type: string
                description: the endpoint of the publickeystore
        '400':
          description: No non found
        '401':
          description: Not authorized
    delete:
      tags:
        - Non
      summary: Deletes the keystore
      description: Deletes an non by name
      operationId: cloudmesh.non.keystore.delete
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the non
      responses:
        '200':
          description: Deletion successful
        '400':
          description: No Non found
        '401':
          description: Not authorized
    put:
      tags:
        - Non
      summary: Adds a keystore
      description: Updates or adds a node to the non.
      operationId: cloudmesh.non.keystore.add
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the non
      responses:
        '200':
           description: Node keystore added sucessfully
        '401':
          description: Not authorized
  /non/{name}/node:
    get:
      tags:
        - Non
      summary: Returns the named non
      description: Returns an non by name
      operationId: cloudmesh.non.find_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the non
      responses:
        '200':
          description: Returning the information of the node
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Non'
        '400':
          description: No non found
        '401':
          description: Not authorized
        '404':
          description: The named non could not be found
    delete:
      tags:
        - Non
      summary: Deletes the named non
      description: Deletes an non by name
      operationId: cloudmesh.non.delete_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the non
      responses:
        '200':
          description: Deletion successful
        '400':
          description: No Non found
        '401':
          description: Not authorized
        '404':
          description: The named non could not be found
  /non/{name}/node/{nodename}:
    get:
      tags:
        - Non
      summary: Node of the named non
      description: Returns the specific node of the named non.
      operationId: cloudmesh.non.node.get_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the non
        - name: nodename
          description: The nodename
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Node info
          content:
            application/json:
              schema:
                $ref: "virtualcluster.yaml#/components/schemas/Node"
        '401':
          description: Not authorized
    put:
      tags:
        - Non
      summary: Updates or adds a node to the non
      description: Updates or adds a node to the non
      operationId: cloudmesh.non.node.add
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the non
        - name: nodename
          description: The nodename
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The node to be uploaded
        required: true
        content:
          application/json:
            schema:
              $ref: "virtualcluster.yaml#/components/schemas/Node"
      responses:
        '200':
           description: Node added sucessfully
        '401':
          description: Not authorized
    delete:
      tags:
        - Non
      summary: Delete a node in the non
      description: Delete a node in the non
      operationId: cloudmesh.non.node.delete
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the non
        - name: nodename
          description: The nodename
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
           description: Deletion successful
        '401':
          description: Not authorized
components:
  schemas:
    Non:
      type: object
      properties:
        name:
          description: The name of the non
          type: string
        description:
          type: string
          description: A description of the non
        nodes:
          description: List of nodes of the non
          type: array
          items:
            $ref: "virtualcluster.yaml#/components/schemas/Node"