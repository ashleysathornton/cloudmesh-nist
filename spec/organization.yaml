openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 05-23-2019
  x-status: defined
  title: Organization
  description: |-
  
    An important concept in many services is the management of a group
    of users in an organization that includes Big Data services. User
    management within an organization can be achieved through several
    concepts. First, it can be achieved by defining the
    organization. Second, this organization can contain a number of
    users. Third, users within the organization can have a variety of
    roles and be separated in various groups. These roles and groups
    are used, for example, to distinguish different access rights to
    services.

  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup
    url: https://cloudmesh-community.github.io/nist/spec/
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /organization:
    get:
      tags:
        - Organization
      summary: Returns all organizations
      description: Returns all organizations
      operationId: cloudmesh.organization.get
      responses:
        200:
          description: organization info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organization"
    put:
      tags:
        - Organization
      summary: Create a new organization
      description: Create a new organization
      operationId: cloudmesh.organization.put
      parameters:
        - in: body
          name: organization
          description: The new organization to create
          schema:
            $ref: "#/components/schemas/Organization"
      responses:
        "201":
          description: Created
  "/organization/{name}":
    get:
      tags:
        - Organization
      summary: Returns the organization
      description: Returns the organization
      operationId: cloudmesh.organization.get_by_name
      parameters:
        - name: name
          description: The name of the organization
          in: path
          required: true
          type: string
      responses:
        200:
          description: organization info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
    put:
      tags:
        - Organization
      summary: Uploads a organization by name
      description: Uploads a organization by name
      operationId: cloudmesh.organization.put_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the organization
      responses:
        200:
          description: organization info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
    delete:
      tags:
        - Organization
      summary: Deletes a organization by name
      description: Deletes a organization by name
      operationId: cloudmesh.organization.delete_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the organization
      responses:
        200:
          description: organization info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
  /organization/{name}/user:
    get:
      tags:
        - Organization
      summary: Returns all users of the organization
      description: Returns all users of the organization
      operationId: cloudmesh.organization.get_user
      responses:
        200:
          description: organization info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
  /organization/{name}/user/{username}:
    get:
      tags:
        - Organization
      summary: Returns the specific user of that organization
      description: Returns the specific user of that organization
      operationId: cloudmesh.organization.get_user_by_name
      parameters:
        - name: username
          description: The username
          in: path
          required: true
          type: string
      responses:
        200:
          description: organization info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
    put:
      tags:
        - Organization
      summary: Create a new user in the organization
      description: Create a new user in the organization
      operationId: cloudmesh.organization.put_user
      parameters:
        - name: username
          description: The username
          in: path
          required: true
          type: string
      responses:
        200:
          description: organization info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
    delete:
      tags:
        - Organization
      summary: Delete a new user in the organization
      description: Delete a new user in the organization
      operationId: cloudmesh.organization.delete_user
      parameters:
        - name: username
          description: The username
          in: path
          required: true
          type: string
      responses:
        200:
          description: organization info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
components:
  schemas:
    Organization:
      type: object
      properties:
        name:
          description: Name of the organization
          type: string
        users:
          description: list of users
          type: array
          items:
            $ref: "user.yaml#/components/schemas/User"
        timestamp:
          description: timestamps associated with the organization
          $ref: "timestamp.yaml#/components/schemas/Timestamp"

