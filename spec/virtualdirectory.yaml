
openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 008-06-2019
  x-status: TODO
  title: Virtual Directory
  description: |-
  
    A virtual directory is a collection of files, replicas, streams or other
    virtual directories.

  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup Service
    url: https://cloudmesh-community.github.io/nist/spec/
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /virtualdirectory:
    get:
      tags:
        - Virtual directory
      summary: Returns a list of virtual directories
      description: Returns a list of all virtual directories
      operationId: cloudmesh.virtual directory.list
      responses:
        '200':
          description: The list of virtual directories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Virtualdirectory'
        '400':
          description: No virtual directories found.
        '401':
          description: Not authorized.
    put:
      tags:
        - Virtual directory
      summary: Uploads a virtual directory to the list of virtual directories
      description: Uploads a virtual directory to the list of virtual directories
      operationId: cloudmesh.virtual directory.add
      requestBody:
        description: The virtual directory to be uploaded
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Virtualdirectory'
      responses:
        '200':
          description: Virtual directory updated.
        '400':
          description: Error updateing virtual directory.
        '401':
          description: Not authorized.
  /virtualdirectory/{name}:
    get:
      tags:
        - Virtual directory
      summary: Returns the named virtual directory
      description: Returns an virtual directory by name
      operationId: cloudmesh.virtualdirectory.find_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the virtual directory
      responses:
        '200':
          description: Retruning the information of the alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Virtualdirectory'
        '400':
          description: No virtual directory found.
        '401':
          description: Not authorized.
        '404':
          description: The named virtual directory could not be found.
    delete:
      tags:
        - Virtual directory
      summary: Deletes the named virtual directory
      description: Deletes an virtual directory by name
      operationId: cloudmesh.virtualdirectory.delete_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the virtual directory
      responses:
        '200':
          description: Deletion successful.
        '400':
          description: No Virtual directory found.
        '401':
          description: Not authorized.
        '404':
          description: The named virtual directory could not be found.

  /virtualdirectory/{name}/{filename}:
    get:
      tags:
        - Virtual directory
      summary: Returns the specific file of that virtual directory
      description: Returns the specific file of that virtual directory
      operationId: cloudmesh.virtualdirectory.file.get_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the virtual directory
        - name: filename
          description: The filename
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: upload ok
          content:
            application/json:
              schema:
                $ref: "filestore.yaml#/components/schemas/File"
        '401':
          description: Not authorized.
    put:
      tags:
        - Virtual directory
      summary: Updates or adds a virtual file  in the virtual directory
      description: Updates or adds a virtual file in the virtual directory
      operationId: cloudmesh.virtualdirectory.file.add
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the virtual directory
      requestBody:
        description: The user to be uploaded
        required: true
        content:
          application/json:
            schema:
              $ref: "filestore.yaml#/components/schemas/File"
      responses:
        '200':
          description: User added sucessfully
        '401':
          description: Not authorized.
    delete:
      tags:
        - Virtual directory
      summary: Delete an user in the virtual directory
      description: Delete an user in the virtual directory
      operationId: cloudmesh.virtualdirectory.file.delete
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the virtual directory
        - name: username
          description: The username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deletion successful.
        '401':
          description: Not authorized.
components:
  schemas:
    Virtualdirectory:
      type: object
      description: the virtual directory
      properties:
        name:
          description: The name of the virtual directory
          type: string
        description:
          description: description of the virtual directory
          type: string
        host:
          description: remote host of the virtual directory
          type: string
        location:
          description: remote location, e.g., a directory with full path on a host
          type: string
        protocol:
          description: access protocol, e.g., HTTP, FTP, SSH, etc.
          type: string
        credential:
          description: credential to access, e.g., username, password
          type: object


