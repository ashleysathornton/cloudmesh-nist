
openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 008-06-2019
  x-status: TODO
  title: Virtual Cluster
  description: |-

    A Virtual Cluster is modeled as manager node, and one or more
    compute nodes. The manager node usually served as a login node and
    can be accessed from outside via a public IP. The compute nodes are
    connected to the manager node via a private, usually high performance (high
    throughput and low latency), network and thus accessible only from the
    manager node. To use the virtual cluster, you login to the manager node, and
    from there you can login to any compute node, or submit a job to run on the
    compute nodes.
    
  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup Service
    url: https://cloudmesh-community.github.io/nist/spec/
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /virtualcluster:
    get:
      tags:
        - Virtualcluster
      summary: Returns a list of virtualclusters
      description: Returns a list of all virtualclusters
      operationId: cloudmesh.virtualcluster.list
      responses:
        '200':
          description: The list of virtualclusters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Virtualcluster'
        '400':
           description: No Virtualclusters found.
    put:
      tags:
        - Virtualcluster
      summary: Uploads an virtualcluster to the list of virtualclusters
      description: Uploads an virtualcluster to the list of virtualclusters
      operationId: cloudmesh.virtualcluster.add
      requestBody:
        description: The virtualcluster to be uploaded
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Virtualcluster'
      responses:
        '200':
          description: Virtualcluster updated or created.
        '400':
          description: Error updateing Virtualcluster.
  /virtualcluster/{name}:
    get:
      tags:
        - Virtualcluster
      summary: Returns the named virtualcluster
      description: Returns an virtualcluster by name
      operationId: cloudmesh.virtualcluster.find_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the virtualcluster
      responses:
        '200':
          description: Retruning the information of the alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Virtualcluster'
        '400':
           description: No virtualcluster found.
        '404':
           description: The named virtualcluster could not be found.
    delete:
      tags:
        - Virtualcluster
      summary: Deletes the named virtualcluster
      description: Deletes an virtualcluster by name
      operationId: cloudmesh.virtualcluster.delete_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the virtualcluster
      responses:
        '200':
          description: Deletion successful.
        '400':
           description: No Virtualcluster found.
        '404':
           description: The named virtualcluster could not be found.
  /virtualcluster/{name}/{nodename}:
    get:
      tags:
        - Virtualcluster
      summary: Node of the named virtualcluster
      description: Returns the specific node of the named virtualcluster. If
                   the node name is manager, the manager node is used. A
                   compute node can not be named manager
      operationId: cloudmesh.virtualcluster.node.get_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the virtualcluster
        - name: nodename
          description: The nodename
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Node info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Node"
    put:
      tags:
        - Virtualcluster
      summary: Updates or adds a node to the virtualcluster
      description: Updates or adds a node to the virtualcluster. If
        the node name is manager, the manager node is uploaded.
      operationId: cloudmesh.virtualcluster.node.add
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the virtualcluster
      requestBody:
        description: The node to be uploaded
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      responses:
        '200':
          description: Node added sucessfully
    delete:
      tags:
        - Virtualcluster
      summary: Delete a node in the virtualcluster
      description: Delete a node in the virtualcluster
      operationId: cloudmesh.virtualcluster.node.delete
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the virtualcluster
        - name: username
          description: The nodename
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deletion successful.
components:
  schemas:
    Virtualcluster:
      type: object
      properties:
        name:
          description: The name of the virtual cluster
          type: string
        description:
          type: string
          description: A description of the virtual cluster
        owner:
          type: string
          description: username of the owner of the virtual cluster
        manager:
          description: Manager node of the virtual cluster
          $ref: "#/components/schemas/Node"
        nodes:
          description: List of nodes of the virtual cluster
          type: array
          items:
            $ref: "#/components/schemas/Node"
    Node:
      type: object
      properties:
        name:
          type: string
          description: name of the node
        state:
          type: string
          description: power state of the node
        ncpu:
          type: integer
          description: number of virtual CPUs of the node
        ram:
          type: string
          description: RAM size of the node
        disk:
          type: string
          description: Disk size of the node
        nics:
          type: array
          description: List of network interfaces of the node
          items:
            $ref: "#/components/schemas/NIC"
    NIC:
      type: object
      properties:
        mac:
          type: string
          description: MAC address of the node
        ip:
          type: string
          description: IP address of the node
