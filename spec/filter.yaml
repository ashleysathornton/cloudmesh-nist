openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 05-23-2019
  title: Filter
  description: |-
  
    Filters can operate on a variety of objects and reduce the
    information received based on a search criterion.
    
  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup
    url: https://cloudmesh-community.github.io/nist
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /filter:
    get:
      tags:
      - Filter
      summary: Returns all filters
      description: Returns all filters
      operationId: cloudmesh.filter.get
      responses:
        200:
          description: filter info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Filter"
    put:
      tags:
      - Filter
      summary: Create a new filter
      description: Create a new filter
      operationId: cloudmesh.filter.put
      parameters:
        - in: body
          name: filter
          description: The new filter to create
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filter"
      responses:
        "201":
          description: Created
  "/filter/{name}":
    get:
      tags:
      - Filter
      summary: Returns a filter
      description: Returns a filter
      operationId: cloudmesh.filter.get_by_name
      parameters:
        - name: name
          description: Get filter info by name
          in: path
          required: true
          type: string
      responses:
        200:
          description: filter info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filter"
    put:
      tags:
        - Filter
      summary: Uploads a filter by name
      description: Uploads a filter by name
      operationId: cloudmesh.filter.put_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the filter
      responses:
        200:
          description: filter info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filter"
    delete:
      tags:
        - Filter
      summary: Deletes a filter by name
      description: Deletes a filter by name
      operationId: cloudmesh.filter.put_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the filter
      responses:
        200:
          description: filter info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filter"
components:
  schemas:
    Filter:
      type: object
      description: the filter
      properties:
        name:
          type: string
          description: name of the filter
        function:
          type: string
          description: the function  of the data exchanged in the stream
        kind:
          type: string
          description: the filter kind or type
        timestamp:
          description: timestamps associated with the resource
          $ref: "timestamp.yaml#/components/schemas/Timestamp"
