---
swagger: "2.0"
info:
  version: 3.1.1
  x-status: compare to variable and merge
  x-date: 02-15-2019
  title: Keyvaluestore
  description: |-

    Keyvaluestore is a service to store key, value, and type information, all of
    which are stored as Strings. However the type could be use to transform it
    into a non strin type.

  termsOfService: 'https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt'
  contact:
    name: NIST BDRA Interface Subgroup
    url: https://cloudmesh-community.github.io/nist/spec/
  license:
    name: Apache
host: localhost:8080
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
basePath: "/cloudmesh/v3"
paths:
  /keyvaluestore/key:
    get:
      tags:
        - Keyvaluestore
      summary: Returns all keys with their values and types included
      description: Returns all keys with their values and types included
      operationId: cloudmesh.keyvaluestore.get
      produces:
        - application/json
      responses:
        '200':
          description: key info
          schema:
            type: array
            items:
              $ref: '#/definitions/Key'
    put:
      tags:
        - Keyvaluestore
      summary: Create a new key
      description: Create a new key
      operationId: cloudmesh.keyvaluestore.put
      parameters:
        - in: body
          name: key
          description: The new key to create
          required: true
          schema:
            $ref: '#/definitions/Key'
      responses:
        '201':
          description: Created
  /keyvaluestore/key/{name}:
    get:
      tags:
        - Keyvaluestore
      summary: Returns the key with its detailed information by name of the key
      description: Returns the key with its detailed information by name of the key
      operationId: cloudmesh.keyvaluestore.get_by_name
      parameters:
        - name: name
          description: name of the key
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: key info
          schema:
            $ref: '#/definitions/Key'
definitions:
  Key:
    type: object
    properties:
      uuid:
        type: string
        description: The uuid of the key, tha uuid must be unique
      name:
        type: string
        description: The name of the key. The name must be unique
      description: 
        type: string
        description: A description of the key
      value:
        type: string
        description: The value, or content of the key
      kind:
        type: string
        description: The type of the key
      timestamp:
        description: timestamps associated with the resource
        $ref: '#/definitions/Timestamp'
