openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 05-23-2019
  x-status: defined
  title: Containers
  description: |-

    Numerous different containers are likely to be created and handling them 
    becomes more and more time consuming as their number increases. This service 
    helps to solve that issue by storing containers and their corresponding 
    information. 

  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup
    url: https://cloudmesh-community.github.io/nist
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /container:
    get:
      tags:
        - Container
      summary: Returns all containers
      description: Returns all containers
      operationId: cloudmesh.containers.get
      responses:
        200:
          description: containers info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Container"
    put:
      tags:
        - Container
      summary: Create a new container
      description: Create a new containers
      operationId: cloudmesh.containers.put
      parameters:
        - in: body
          name: containers
          description: The new containers to create
          schema:
            $ref: "#/components/schemas/Container"
      responses:
        201:
          description: Created
  "/container/{name}":
    get:
      tags:
        - Container
      summary: Returns a container
      description: Returns a containers
      operationId: cloudmesh.containers.get_by_name
      parameters:
        - name: name
          description: name of the container
          in: path
          required: true
          type: string
      responses:
        200:
          description: containers info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Container"
components:
  schemas:
    Container:
      type: object
      description: A record representing a container
      properties:
        name:
          type: string
          description: name of the container
        version:
          type: string
          description: version of the container
        label:
          type: string
          description: label of the container
        type:
          type: string
          description: type of the container
        definition:
          type: string
          description: definition or manifest of the container
        imgURI:
          type: string
          description: URI of the container
        tags:
          type: array
          description: tags of the container
          items:
            type: string
        timestamp:
          description: timestamps associated with the resource
          $ref: "timestamp.yaml#/components/schemas/Timestamp"
