openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 05-23-2019
  x-status: TODO
  title: Public Key Store
  description: |-
  
    Many services and frameworks use Secure Shell (SSH) keys to
    authenticate. This service allows the convenient storage of the
    public keys.

  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup
    url: https://cloudmesh-community.github.io/nist
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /publickeystore:
    get:
      tags:
        - Publickeystore
      summary: Returns all public keys
      description: Returns all public keys
      operationId: cloudmesh.publickeystore.get
      responses:
        200:
          description: public key information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PublicKey"
    put:
      tags:
        - Publickeystore
      summary: Put a new public key into the public key store
      description: Put a new public key into the public key store
      operationId: cloudmesh.publickeystore.put
      parameters:
        - in: path
          name: publickey
          description: The public key to be uploaded
          schema:
            $ref: "#/components/schemas/PublicKey"
      responses:
        "201":
          description: Created
  "/publickeystore/{name}":
    get:
      tags:
        - Publickeystore
      summary: Returns a public key by name
      description: Returns a public key by name
      operationId: cloudmesh.publickeystore.get_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the public key
      responses:
        200:
          description: public key information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicKey"
    put:
      tags:
        - Publickeystore
      summary: Uploads a public key by name
      description: Uploads a public key by name
      operationId: cloudmesh.publickey.put_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the public key
      responses:
        200:
          description: public key info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicKey"
    delete:
      tags:
        - Publickeystore
      summary: Deletes a public key by name
      description: Deletes a public key by name
      operationId: cloudmesh.publickey.put_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the public key
      responses:
        200:
          description: public key info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicKey"
components:
  schemas:
    PublicKey:
      type: object
      description: the public key
      properties:
        name:
          type: string
          description: The name of the public key
        value:
          type: string
          description: The value of the public key
        kind:
          type: string
          description: The key kind such as rsa, dsa
        group:
          type: string
          description: An optional group name allowing to group keys to create
                       custom groups
        comment:
          type: string
          description: A comment for the public key
        uri:
          type: string
          description: The uri of the public key if any
        fingerprint:
          type: string
          description: The fingerprint of the public key
        timestamp:
          description: timestamps associated with the resource
          $ref: "timestamp.yaml#/components/schemas/Timestamp"
