openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 05-23-2019
  x-status: TODO
  title: Deployment
  description: |-
  
    A service to store deployment, value, type information. All of
    them are stored as Strings.
    
  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup
    url: https://cloudmesh-community.github.io/nist
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /deployments:
    get:
      tags:
        - Deployment
      summary: Returns all deployments
      description: Returns all deployments
      operationId: cloudmesh.deployment.get
      responses:
        200:
          description: deployment info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Deployment"
    put:
      tags:
        - Deployment
      summary: Create a new deployment
      description: Create a new deployment
      operationId: cloudmesh.deployment.add
      parameters:
        - in: path
          name: deployment
          description: The new deployment to create
          schema:
            $ref: "#/components/schemas/Deployment"
      responses:
        "201":
          description: Created
  "/deployment/{name}":
    get:
      tags:
        - Deployment
      summary: Returns a deployment
      description: Returns a deployment
      operationId: cloudmesh.deployment.get_by_name
      parameters:
        - name: name
          description: Get deployment info by name
          in: path
          required: true
          type: string
      responses:
        200:
          description: deployment info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deployment"
components:
  schemas:
    Deployment:
      type: object
      description: the deployment
      properties:
        cluster:
          type: string
          description: the name of the cluster
        stack:
          type: array
          items:
             type: object
             #layers: string
        timestamp:
          description: timestamps associated with the resource
          $ref: "timestamp.yaml#/components/schemas/Timestamp"
