openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 05-23-2019
  x-status: TODO
  title: Replica
  description: |-
  
    In many distributed systems, it is important that a file can be
    replicated among different systems to provide faster access. It is
    important to provide a mechanism to trace the pedigree of the file
    while pointing to its original source. 

  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup
    url: https://cloudmesh-community.github.io/nist/spec/
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /replica:
    get:
      tags:
      - Replica
      summary: Returns all replicas records
      description: Returns all replicas records
      operationId: cloudmesh.replica.get
      responses:
        '200':
          description: replica info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Replica"
    put:
      tags:
      - Replica
      summary: Create a new replica
      description: Create a new replica      
      operationId: cloudmesh.replica.add
      parameters:
        - in: path
          name: replica
          required: true
          description: The new replica entry to create
          schema:
            $ref: "#/components/schemas/Replica"
      responses:
        201:
          description: Created
  "/replica/{name}":
    get:
      tags:
      - Replica
      summary: Returns a replica by name
      description: Returns a replica by name
      operationId: cloudmesh.replica.get_by_name
      parameters:
        - name: name
          description: name of the replica entry
          in: path
          required: true
          type: string
      responses:
        '200':
          description: replica info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Replica"
    put:
      tags:
        - Replica
      summary: Uploads a replica by name
      description: Uploads a replica by name
      operationId: cloudmesh.replica.put_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the replica
      responses:
        '200':
          description: replica info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Replica"
    delete:
      tags:
        - Replica
      summary: Deletes a replica by name
      description: Deletes a replica by name
      operationId: cloudmesh.replica.put_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the replica
      responses:
        '200':
          description: replica info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Replica"

components:
  schemas:
    Replica:
      type: object
      description: An entry representing a file replica record
      properties:
        name:
          type: string
          description: the name of the replica
        filename:
          type: string
          description: the original filename
        endpoint:
          type: string
          description: The location of the file
        checksum:
          type: string
          description: The checksum of the file
        size:
          type: integer
          description: The size of the file in byte
        timestamp:
          $ref: "timestamp.yaml#/components/schemas/Timestamp"
          description: The timestamp of the replica. The timestamp refers to when this entry has been accessed or changed, not the object this replica is pointing to.

