openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 05-23-2019
  x-status: TODO
  title: Flavor
  description: |-
  
    The flavor specifies elementary information about a compute
    node. This information includes name, id, label, ram size,
    swap size, disk space, availability of ephemeral disk, available
    bandwidth, price value, cloud name, and date and time of last update.
    Flavors and the corresponding information are essential to size a
    virtual cluster appropriately.

  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup
    url: https://cloudmesh-community.github.io/nist
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /flavor:
    get:
      tags:
      - Flavor
      summary: Returns all flavors
      description: Returns all flavors
      operationId: cloudmesh.flavor.get
      responses:
        200:
          description: flavor info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Flavor"
    put:
      tags:
      - Flavor
      summary: Create a new flavor
      description: Create a new flavor
      operationId: cloudmesh.flavor.add
      parameters:
        - in: path
          name: flavor
          required: true
          description: The new flavor to create
          schema:
            $ref: "#/components/schemas/Flavor"
      responses:
        "201":
          description: Created
  "/flavor/{name}":
    get:
      tags:
      - Flavor
      summary: Returns a flavor
      description: Returns a flavor
      operationId: cloudmesh.flavor.get_by_name
      parameters:
        - name: name
          description: name of the flavor
          in: path
          required: true
          type: string
      responses:
        200:
          description: flavor info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Flavor"
    put:
      tags:
        - Flavor
      summary: Uploads a flavor by name
      description: Uploads a flavor by name
      operationId: cloudmesh.flavor.put_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the flavor
      responses:
        200:
          description: flavor info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Flavor"
    delete:
      tags:
        - Flavor
      summary: Deletes a flavor by name
      description: Deletes a flavor by name
      operationId: cloudmesh.flavor.put_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the flavor
      responses:
        200:
          description: flavor info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Flavor"
components:
  schemas:
    Flavor:
      type: object
      description: the flavor
      properties:
        name:
          type: string
          description: name of the flavor
        id:
          type: string
          description: the id of the flavor
        label:
          type: string
          description: a label that a user can set for this flavor
        description:
            type: string
            description: A description for the compute node
        ram:
          type: integer
          description: number of bytes used for the image in RAM
        swap:
          type: integer
          description: number of bytes used for the image in SWAP
        disk:
          type: integer
          description: number of bytes used for the disk
        ephemeral_disk:
          type: boolean
          description: specifies whether the flavor features an ephemeral disk
        bandwidth:
          type: integer
          description: bandwidth of the node
        price:
          type: integer
          description: price for the flavor
        cloud:
          type: string
          description: name of the cloud this flavor is used
        timestamp:
          description: timestamps associated with the resource
          $ref: "timestamp.yaml#/components/schemas/Timestamp"
