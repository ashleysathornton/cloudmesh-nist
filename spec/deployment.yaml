openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 08-06-2019
  x-status: TODO
  title: Deployment
  description: |-
  
    A service to store software steack deployments.
    
  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup
    url: https://cloudmesh-community.github.io/nist
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /deployment:
    get:
      tags:
        - Deployment
      summary: Returns a list of deploymentes
      description: Returns a list of all deploymentes
      operationId: cloudmesh.deployment.list
      responses:
        '200':
          description: The list of deploymentses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
        '400':
           description: No Deployment found.
    put:
      tags:
        - Deployment
      summary: Set an deployment
      description: Sets the named deployment
      operationId: cloudmesh.deployment.add
      requestBody:
        description: The new deployment to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      responses:
        '200':
          description: Deployment updated.
        '400':
          description: Error updateing deployment.
        '401':
          description: Not authorized.
  /deployment/{name}:
    get:
      tags:
        - Deployment
      summary: Returns the named deployment
      description: Returns an deployment by name
      operationId: cloudmesh.deployment.find_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the deployment
      responses:
        '200':
          description: Returning the information of the deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
        '400':
           description: No Deployment found.
        '404':
           description: The named deployment could not be found.
    delete:
      tags:
        - Deployment
      summary: Deletes the named deployment
      description: Deletes an deployment by name
      operationId: cloudmesh.deployment.delete_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the deployment
      responses:
        '200':
          description: Deletion successful.
        '400':
           description: No Deployment found.
        '401':
          description: Not authorized.
        '404':
           description: The named deployment could not be found.
components:
  schemas:
    Deployment:
      type: object
      description: the deployment
      properties:
        kind:
          type: string
          description: the kind of the deployment
        specification:
          type: string
          description: the specification of the deployment
