# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Key(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name=None, description=None, value=None, kind=None):  # noqa: E501
        """Key - a model defined in Swagger

        :param name: The name of this Key.  # noqa: E501
        :type name: str
        :param description: The description of this Key.  # noqa: E501
        :type description: str
        :param value: The value of this Key.  # noqa: E501
        :type value: str
        :param kind: The kind of this Key.  # noqa: E501
        :type kind: str
        """
        self.swagger_types = {
            'name': str,
            'description': str,
            'value': str,
            'kind': str
        }

        self.attribute_map = {
            'name': 'name',
            'description': 'description',
            'value': 'value',
            'kind': 'kind'
        }

        self._name = name
        self._description = description
        self._value = value
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Key of this Key.  # noqa: E501
        :rtype: Key
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Key.


        :return: The name of this Key.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Key.


        :param name: The name of this Key.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this Key.


        :return: The description of this Key.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Key.


        :param description: The description of this Key.
        :type description: str
        """

        self._description = description

    @property
    def value(self):
        """Gets the value of this Key.


        :return: The value of this Key.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Key.


        :param value: The value of this Key.
        :type value: str
        """

        self._value = value

    @property
    def kind(self):
        """Gets the kind of this Key.


        :return: The kind of this Key.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Key.


        :param kind: The kind of this Key.
        :type kind: str
        """

        self._kind = kind
